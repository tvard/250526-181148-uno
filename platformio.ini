; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:receiver_firmware]
platform = atmelavr
board = pro8MHzatmega328
framework = arduino
; upload_speed = 57600
lib_deps = 
	nrf24/RF24 @ ^1.5.0
build_src_filter = +<2WD_RC_RECEIVER.cpp> +<2WD_RC_RECEIVER_logic.cpp> +<motor_helpers.cpp> +<other_helpers.cpp>
build_flags = 
	-Os                            ; Optimize for size
	-ffunction-sections            ; Enable function sections
	-fdata-sections                ; Enable data sections
	-Wl,--gc-sections              ; Enable garbage collection
	-DSERIAL_TX_BUFFER_SIZE=16     ; Reduce serial buffer
	-DSERIAL_RX_BUFFER_SIZE=16     ; Reduce serial buffer
	
[env:transmitter_firmware]
platform = atmelavr
board = pro8MHzatmega328
framework = arduino
; upload_speed = 57600
lib_deps = 
	adafruit/Adafruit GFX Library @ ^1.12.1
	adafruit/Adafruit SSD1306 @ ^2.5.15
	nrf24/RF24 @ ^1.5.0
build_src_filter = +<2WD_RC_TRANSMITTER.cpp> +<2WD_RC_TRANSMITTER_logic.cpp>
build_flags = 
	-Os                            ; Optimize for size
	-ffunction-sections            ; Enable function sections
	-fdata-sections                ; Enable data sections
	-Wl,--gc-sections              ; Enable garbage collection
	-DSERIAL_TX_BUFFER_SIZE=16     ; Reduce serial buffer
	-DSERIAL_RX_BUFFER_SIZE=16     ; Reduce serial buffer


[env:rf_test]
platform = atmelavr
board = pro16MHzatmega328
framework = arduino
; upload_speed = 115200
upload_speed = 57600
lib_deps = 
	nrf24/RF24 @ ^1.5.0
build_src_filter = +<RF_COMM_TEST.cpp>
build_flags = 
	-Os
	-ffunction-sections
	-fdata-sections
	-Wl,--gc-sections

[env:memory_test]
platform = atmelavr
board = pro16MHzatmega328
framework = arduino
upload_speed = 115200
lib_deps = 
	adafruit/Adafruit GFX Library @ ^1.12.1
	adafruit/Adafruit SSD1306 @ ^2.5.15
build_src_filter = +<2WD_RC_TRANSMITTER_TEST.cpp>
build_flags = 
	-Os
	-ffunction-sections
	-fdata-sections
	-Wl,--gc-sections

[env:unit_tests]
platform = native
lib_deps = 
	throwtheswitch/Unity @ ^2.6.0
build_src_filter = +<test/> +<lib/helpers/>
; MinGW required => run mingw_install.ps1 to set up MinGW dependencies (non-admin), or install MinGW manually
build_flags = 
	-I test
	-IC:/mingw64/include
	-IC:/mingw64/x86_64-w64-mingw32/include
	-IC:/mingw64/lib/gcc/x86_64-w64-mingw32/15.1.0/include/c++
	-IC:/mingw64/lib/gcc/x86_64-w64-mingw32/15.1.0/include/c++/x86_64-w64-mingw32
	-IC:/mingw64/lib/gcc/x86_64-w64-mingw32/15.1.0/include/c++/backward
	-DARDUINO_AVR_PRO16MHZATMEGA328
platform_packages = platformio/tool-avrdude@^1.70200.0

; usage: pio run -e bootloader
; requirements: ISP programmer (dedicated e.g. USBasp, or Arduino as ISP (flashed with ArduinoISP.cpp))
[env:bootloader]
platform = atmelavr
board = pro8MHzatmega328
framework = arduino
; Use Arduino as ISP upload protocol
upload_protocol = stk500v1
upload_port = COM9
upload_speed = 19200
upload_flags = 
    -P$UPLOAD_PORT
    -b$UPLOAD_SPEED
    -c$UPLOAD_PROTOCOL
platform_packages = platformio/tool-avrdude@^1.70200.0
build_src_filter = +<Dummy.cpp>
; Override board fuses with our custom values
board_build.f_cpu = 8000000L
board_fuses.lfuse = 0xE2
board_fuses.hfuse = 0xDA  
board_fuses.efuse = 0x05
board_bootloader.file = optiboot/optiboot_atmega328.hex
; Force custom fuse settings to override board defaults
board_fuses.lock_bits = 0x0F

; if above fails or doing incorrect things, try this
[env:bootloader_script]
platform = atmelavr
board = pro8MHzatmega328
framework = arduino
extra_scripts = scripts/burn_bootloader.py
build_src_filter = +<Dummy.cpp>
platform_packages = platformio/tool-avrdude@^1.70200.0
upload_port = COM9

; Arduino as ISP
; To use Arduino Uno board with ArduinoISP sketch as programmer
; D10 => RESET (not DTR!), GND => GND and D11-D13 => D11-D13
[env:arduino_as_isp]
platform = atmelavr
board = uno
framework = arduino
build_src_filter = +<ArduinoISP.cpp>
platform_packages = platformio/tool-avrdude@^1.70200.0