; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:receiver_firmware]
platform = atmelavr
board = pro16MHzatmega328
framework = arduino
lib_deps = 
    mbed-syundo0730/I2Cdev@0.0.0+sha.3aa973ebe3e5
    epsilonrt/RadioHead @ ^1.122.1
    jrowberg/I2Cdevlib-Core@^1.0.1
    jrowberg/I2Cdevlib-MPU6050
build_src_filter = +<2WD_RC_RECEIVER.cpp> +<motor_helpers.cpp> +<other_helpers.cpp>
upload_port = COM3
; FOR BOARDS WITHOUT DTR (RTS INSTEAD), UNCOMMENT BELOW. WRAPPER PULSES RTS LOW BEFORE UPLOAD (SIMULATING DTR)
; upload_command = python rts_reset_upload_wrapper.py $UPLOAD_PORT 

[env:transmitter_firmware]
platform = atmelavr
board = pro16MHzatmega328
framework = arduino
lib_deps = 
    mbed-syundo0730/I2Cdev@0.0.0+sha.3aa973ebe3e5
    epsilonrt/RadioHead @ ^1.122.1
build_src_filter = +<2WD_RC_TRANSMITTER.cpp>

; Native build environment for C/C++ unit tests. Run with `pio test -e native`
; This environment uses the Unity testing framework for C/C++ unit tests.
; The tests are located in the `test` directory, and the Unity headers are included from there.
; It is configured to use MinGW64 C++ headers instead of Arduino framework libraries.
; The build flags include paths to the MinGW64 C++ standard library headers and architecture-specific headers.
[env:native]
platform = native                ; Native (C/C++, non-arduino) build environment
lib_deps =
  throwtheswitch/Unity @ ^2.6.0  ; Unity testing framework for C/C++ (https://docs.platformio.org/en/stable/advanced/unit-testing/frameworks/unity.html)
build_flags =                                                                     ; Flags for [native] env, use MinGW64 C++ headers instead of Arduino framework libs
  -I test                                                                         ; Include the test directory for Unity headers
  -IC:/mingw64/include                                                             ; Include MinGW general headers
  -IC:/mingw64/x86_64-w64-mingw32/include                                         ; Include MinGW architecture-specific headers
  -IC:/mingw64/lib/gcc/x86_64-w64-mingw32/15.1.0/include/c++                      ; Include C++ standard library headers
  -IC:/mingw64/lib/gcc/x86_64-w64-mingw32/15.1.0/include/c++/x86_64-w64-mingw32   ; Include C++ implementation-specific headers
  -IC:/mingw64/lib/gcc/x86_64-w64-mingw32/15.1.0/include/c++/backward             ; Include C++ backward compatibility headers

